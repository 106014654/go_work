// Code generated by MockGen. DO NOT EDIT.
// Source: user_webook/internal/repository/code.go

// Package repomocks is a generated GoMock package.
package repomocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCodeRepositoryInter is a mock of CodeRepositoryInter interface.
type MockCodeRepositoryInter struct {
	ctrl     *gomock.Controller
	recorder *MockCodeRepositoryInterMockRecorder
}

// MockCodeRepositoryInterMockRecorder is the mock recorder for MockCodeRepositoryInter.
type MockCodeRepositoryInterMockRecorder struct {
	mock *MockCodeRepositoryInter
}

// NewMockCodeRepositoryInter creates a new mock instance.
func NewMockCodeRepositoryInter(ctrl *gomock.Controller) *MockCodeRepositoryInter {
	mock := &MockCodeRepositoryInter{ctrl: ctrl}
	mock.recorder = &MockCodeRepositoryInterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCodeRepositoryInter) EXPECT() *MockCodeRepositoryInterMockRecorder {
	return m.recorder
}

// Store mocks base method.
func (m *MockCodeRepositoryInter) Store(ctx context.Context, biz, phone, code string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", ctx, biz, phone, code)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockCodeRepositoryInterMockRecorder) Store(ctx, biz, phone, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockCodeRepositoryInter)(nil).Store), ctx, biz, phone, code)
}

// Verify mocks base method.
func (m *MockCodeRepositoryInter) Verify(ctx context.Context, biz, phone, inputCode string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", ctx, biz, phone, inputCode)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockCodeRepositoryInterMockRecorder) Verify(ctx, biz, phone, inputCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockCodeRepositoryInter)(nil).Verify), ctx, biz, phone, inputCode)
}
